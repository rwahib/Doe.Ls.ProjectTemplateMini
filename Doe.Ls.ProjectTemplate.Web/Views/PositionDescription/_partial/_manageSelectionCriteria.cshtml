@using System.Data.Entity.Validation
@model Doe.Ls.ProjectTemplate.Data.PositionDescription
@{
    var selectionCriteriaItems = ViewBagWrapper.PositionDescBag.GetSelectionCriteria("selectionCriteriaItems", ViewData);
    var user = ViewBagWrapper.UserInfoExtensionBag.GetCurrentUser(ViewData);
    var positionFocusCriterias = Model.PositionFocusCriterias;
    var errors =(ViewData["Errors"]  ?? TempData["Errors"]) as List<DbValidationError>;
}

<div id="formTab" class="card.card-body">

    <div class="error">
        <ul class="list-group">
            @if(errors != null)
                {
                foreach(var error in errors)
                    {
                    <li class="list-group-item ">
                        <label class="validation-error">@string.Format("{0}", error.PropertyName.Wordify())</label>
                        <label class="validation-error">@string.Format("{0}", error.ErrorMessage)</label>
                    </li>
                    }
                }
        </ul>
    </div>


    <form class="" data-tracking-enabled="true" role="form" method="POST" action="@Url.Action("SaveSelectionCriteria")" id="form-positionDescription-manageselectionCriteria">

        @Html.HiddenFor(model => model.PositionDescriptionId)
        <div class="row">
            <div class="col-lg-1 col-lg-offset-9">
                <p>
                    @Html.ActionLink("Cancel", "ListSelectionCriteria", new { id = Model.PositionDescriptionId }, new { @class = "btn btn-primary" })
                </p>
            </div>

            <div class="col-lg-1 ">
                <p>
                    <button type="submit" class="btn btn-primary">Save & Next</button>
                </p>
            </div>
        </div>
        <div class="row-fluid alert alert-warning">
            
            @if (selectionCriteriaItems.Count() < 8)
            {
                
                if (user.IsSystemAdmin || user.IsAdministrator || user.IsPowerUser)
                {
                    <span class="font-black">Please add more selection criteria for the selected grade in <a href=@Url.Action("Index", "LookupFocusGradeCriteria")>Manage focus, grade and selection criteria</a></span>
                }
                else
                {
                    <span class="font-black font-bold">Please contact the Adminstrator - insufficient Selection criteria entered for the chosen grade.</span>
                }
            }
            else
            {
                <span class="font-black">Please select minimum 8 and maximum 10 selection criteria.</span><br>
            }
        </div>
        <table id="selectionCritab" class="table table-striped table-responsive notDataTable">
            <thead>
            <tr class="row">
                <td class="col-lg-3">Focus</td>
                <td class="col-lg-8">Selection criteria</td>
                <td class="col-lg-1"></td>
            </tr>
            <thead>
            <tbody>
            @{
                var items = selectionCriteriaItems.Where(sc => sc.SelectionCriteria.Criteria != Enums.Cnt.Custom).OrderBy(sc => sc.Focus.OrderList);
            }
            @foreach (var sc in items)
            {
                <tr class="row ">
                    <td class="col-lg-3">
                        <div class="sc-table-height">@sc.Focus</div>
                    </td>
                    <td class="col-lg-8">
                        <div class="sc-table-height">
                            <div class="sc-table-height">@sc.SelectionCriteria</div>
                        </div>
                    </td>

                    <td class="col-lg-1">
                        <div class="sc-table-height">
                            @{
                                var ischecked = "";
                                if (sc.IsMandatory)
                                {
                                    ischecked = "checked=\"checked\" disabled=\"disabled\"";
                                }
                                else if (positionFocusCriterias.Any(pf => pf.LookupId == sc.LookupId))
                                {
                                    ischecked = "checked=\"checked\"";
                                }
                            }
                            <input type="checkbox" name="item_@sc.LookupId" @ischecked>

                        </div>
                    </td>
                </tr>
            }
            @{
                var custom = selectionCriteriaItems.FirstOrDefault(sc => sc.SelectionCriteria.Criteria == Enums.Cnt.Custom);
            }
            @if (custom != null)
            {
                <tr class="row ">
                    <td class="col-lg-3">
                        <div class="sc-table-height">@custom.Focus</div>
                    </td>
                    @{
                        var ischecked = "";
                        var dis = " disabled=\"disabled\"";
                        var customChkBoxVal = "false";
                        if (custom.IsMandatory)
                        {
                            ischecked = "checked=\"checked\" disabled=\"disabled\"";
                            customChkBoxVal = "true";
                            dis = "";
                        }
                        else if (positionFocusCriterias.Any(pf => pf.LookupId == custom.LookupId))
                        {
                            ischecked = "checked=\"checked\"";
                            customChkBoxVal = "true";
                            dis = "";
                        }

                    }


                    <td class="col-lg-8">
                        <div class="sc-table-height">
                            @{
                                var x = positionFocusCriterias.FirstOrDefault(pf => pf.LookupId == custom.LookupId);
                                var y = x != null ? x.LookupCustomContent : "";
                            }
                            <textarea name="customCriteria" id="customCriteria" @dis class="form-control">@y</textarea>
                            <input type="hidden" name="CustomChkBoxVal" value="@customChkBoxVal" id="CustomChkBoxVal"/>
                        </div>
                    </td>

                    <td class="col-lg-1">
                        <div class="sc-table-height">
                            <input type="checkbox" id="item_custom" name="item_custom" @ischecked>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        <div class="row">
            <div class="col-lg-1 col-lg-offset-9">
                <p>
                    @Html.ActionLink("Cancel","ListSelectionCriteria",new { id=Model.PositionDescriptionId},new {@class= "btn btn-primary" })
                </p>
            </div>

            <div class="col-lg-1 ">
                <p>
                    <button type="submit" class="btn btn-primary">Save & Next</button>
                </p>
            </div>
        </div>
    </form>
</div>

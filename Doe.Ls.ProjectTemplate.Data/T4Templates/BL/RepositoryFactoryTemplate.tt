<#@ template language="C#"inherits="MVCTemplate.BaseTemplate" #> 
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ import namespace="Doe.Ls.EntityBase.Helper" #>
<#@ parameter name="EntityType" type="System.Data.Entity.Core.Metadata.Edm.EntityType"#>
<#@ parameter name="AppNamespace" type="System.String"#>
<#@ parameter name="EntityContext" type="System.Data.Entity.DbContext"#>

<# T4Helper.SetAssemblyClassNameFormatFromContext(EntityContext); #>

<#    

var helper=new EdmMetadataHelper(EntityContext);
    
#>
using System.Web;
using Doe.Ls.EntityBase;
using Doe.Ls.EntityBase.BLLBase;
using Doe.Ls.EntityBase.Logging;
using Doe.Ls.EntityBase.RepositoryBase;
using Doe.Ls.EntityBase.SessionService;
using <#=AppNamespace#>.Core.BL.DomainServices;
using <#=AppNamespace#>.Core.BL.DomainServices.Logging;
using <#=AppNamespace#>.Core.BL.EntityRepositories;
using <#=AppNamespace#>.Data;


namespace <#=AppNamespace#>.Core.BL 
{
    public class RepositoryFactory : RepositoryFactoryApplicationBase {
       
        public RepositoryFactory(UnityContainer container)
            : base(container) {
        }
        public RepositoryFactory() { }

        public override void RegisterEntityRepositories() 
        {

            #region Entity services registration

            var unitOfWork=new UnitOfWork();
            unitOfWork.DbContext.Configuration.LazyLoadingEnabled = false;
            Container.RegisterInstance<IUnitOfWork>(unitOfWork);
            
<# foreach(var entityType in helper.GetEntityList())
{ 
    if(entityType.Name.ToLower().Contains("sysdia"))continue; #>
            Container.RegisterType<IRepository<<#=entityType.Name#>>, <#=T4Helper.CleanClassName(entityType.Name)#>Repository>();
<#
}//foreach #>

            #endregion

        }       
    }
}
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Doe.Ls.ProjectTemplate.Data.T4Templates.Scripts
{
    using Doe.Ls.EntityBase.Helper;
    using Doe.Ls.EntityBase.MVCExtensions;
    using System.Data.Entity.Core.Metadata.Edm;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class SingleServiceTemplate : MVCTemplate.BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n");
            this.Write("\r\n");
            
            #line 12 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
     
    var helper=new EdmMetadataHelper(EntityContext);

            
            #line default
            #line hidden
            this.Write(@"/// <reference path=""_references.js"" />

define(['jquery', 'cnt', 'helper', 'interactive', 'api', 'fValidator'], function ($, cnt, helper, interactive, api) {

    return {
        initialise: function(){
            // Uncomment if custom validation is required
            // interactive.hookPopupButton(
                // {}                  // custom validation settings
                // ,function(){        // modal load callback function
                // }
                // ,true               // use Ajax Submit Handler
                // ,function(data){    // success callback function
                // }
                // ,function(data){    // error callback function
                // }
                // ,'.pop-up'          // element selector
                // ,true               // auto hide
            // );
        },

        dtSettings: {
            'iDisplayLength': 10,
            'aoColumns': [
");
            
            #line 39 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
    foreach(var pm in T4Helper.ListPropertiesWithFkInfo(EntityType))
            
            #line default
            #line hidden
            
            #line 40 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
    {
            
            #line default
            #line hidden
            
            #line 41 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
        if(!pm.FK){ 
            
            #line default
            #line hidden
            
            #line 42 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            if(!T4Helper.PropertyOperations.IsDate(pm.Property) && !T4Helper.PropertyOperations.IsDateTime(pm.Property)){
            
            #line default
            #line hidden
            this.Write("                {\'sName\':\'");
            
            #line 43 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\',\'mData\':\'");
            
            #line 43 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\'");
            
            #line 43 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
 if(!T4Helper.PropertyOperations.IsKey(pm.Property,EntityType)){
            
            #line default
            #line hidden
            this.Write(", \'defaultContent\': \'\' ");
            
            #line 43 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
                }
            
            #line default
            #line hidden
            this.Write(" },\r\n");
            
            #line 44 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            } 
            
            #line default
            #line hidden
            
            #line 45 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            else{
            
            #line default
            #line hidden
            this.Write("                {\r\n                    \'sName\':\'");
            
            #line 47 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n                    \'mData\': \'");
            
            #line 48 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n                    \'mRender\': function(value) {\r\n                        ret" +
                    "urn helper.getDateTimeFromJsonDate(value);\r\n                    }\r\n             " +
                    "   },\r\n");
            
            #line 53 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            }
            
            #line default
            #line hidden
            
            #line 54 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
        }
            
            #line default
            #line hidden
            
            #line 55 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
        else{
            
            #line default
            #line hidden
            this.Write("                { \'sName\':\'");
            
            #line 56 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\',\'mData\':\'");
            
            #line 56 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(pm.Property.Name));
            
            #line default
            #line hidden
            this.Write("\', \'defaultContent\': \'\'},\r\n");
            
            #line 57 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
        }
            
            #line default
            #line hidden
            
            #line 58 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
    }
            
            #line default
            #line hidden
            this.Write("                {\r\n                    \'mData\': \'");
            
            #line 60 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EntityType.KeyProperties.First().Name));
            
            #line default
            #line hidden
            this.Write("\',\r\n                    \'mRender\': function(code){\r\n                        retur" +
                    "n \'<div class=\"btn-group-vertical\">\' + \r\n                                    \'<a" +
                    " href=\"");
            
            #line 63 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.EntityType.Name.CleanEntityName()));
            
            #line default
            #line hidden
            this.Write("/Edit?");
            
            #line 63 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetKeyName()));
            
            #line default
            #line hidden
            this.Write("=\' + code + \'\" class=\"btn btn-primary pop-up\"  data-toggle=\"modal\" data-target=\"#" +
                    "vlePluginModal\">Edit</a>\' + \r\n                                    \'<a href=\"");
            
            #line 64 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.EntityType.Name.CleanEntityName()));
            
            #line default
            #line hidden
            this.Write("/Details?");
            
            #line 64 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetKeyName()));
            
            #line default
            #line hidden
            this.Write("=\' + code + \'\" class=\"btn btn-primary pop-up\"  data-toggle=\"modal\" data-target=\"#" +
                    "vlePluginModal\">Detail</a>\' + \r\n                                    \'<a href=\"");
            
            #line 65 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.EntityType.Name.CleanEntityName()));
            
            #line default
            #line hidden
            this.Write("/Delete?");
            
            #line 65 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetKeyName()));
            
            #line default
            #line hidden
            this.Write(@"=' + code + '"" class=""btn btn-primary pop-up""  data-toggle=""modal"" data-target=""#vlePluginModal"">Delete</a>' + 
                                '</div>';
                    },
                    'bSortable': false
                }
            ],
            'aaSorting': [[0,'asc']],
            'bFilter': true,
            // Use this to define the onDrawCallBack for Data Table
            'fnDrawCallback': function () {
                hookPopup();
            },
            // Use this to set server parameters
            //'fnServerParams': function (aoData) {
            //      function to construct Server parameters 
            //}
        }
    }

    function hookPopup(){
        if($('.pop-up').length>0){
            interactive.hookPopupButton(
               // {}                  // custom validation settings
              //  ,function(){        // modal load callback function
             //   }
             //   ,true               // use Ajax Submit Handler
             //   ,function(data){    // success callback function
             //   }
           //     ,function(data){    // error callback function
           //     }
           //     ,'.pop-up'          // element selector
           //     ,true               // auto hide
            );
        }
    }

});

");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 103 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"
    string GetKeyName()
    {
        return T4Helper.PropertyOperations.GetKeyLocalVariableName(EntityType);

    } 
        
        #line default
        #line hidden
        
        #line 1 "C:\Users\det\Source\Repos\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\SingleServiceTemplate.tt"

private global::System.Data.Entity.Core.Metadata.Edm.EntityType _EntityTypeField;

/// <summary>
/// Access the EntityType parameter of the template.
/// </summary>
private global::System.Data.Entity.Core.Metadata.Edm.EntityType EntityType
{
    get
    {
        return this._EntityTypeField;
    }
}

private global::System.Data.Entity.DbContext _EntityContextField;

/// <summary>
/// Access the EntityContext parameter of the template.
/// </summary>
private global::System.Data.Entity.DbContext EntityContext
{
    get
    {
        return this._EntityContextField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool EntityTypeValueAcquired = false;
if (this.Session.ContainsKey("EntityType"))
{
    this._EntityTypeField = ((global::System.Data.Entity.Core.Metadata.Edm.EntityType)(this.Session["EntityType"]));
    EntityTypeValueAcquired = true;
}
if ((EntityTypeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityType");
    if ((data != null))
    {
        this._EntityTypeField = ((global::System.Data.Entity.Core.Metadata.Edm.EntityType)(data));
    }
}
bool EntityContextValueAcquired = false;
if (this.Session.ContainsKey("EntityContext"))
{
    this._EntityContextField = ((global::System.Data.Entity.DbContext)(this.Session["EntityContext"]));
    EntityContextValueAcquired = true;
}
if ((EntityContextValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityContext");
    if ((data != null))
    {
        this._EntityContextField = ((global::System.Data.Entity.DbContext)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}

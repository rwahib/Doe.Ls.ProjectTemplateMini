//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Doe.Ls.ProjectTemplate.Core.VleWsUserInformation {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserInformationSoap", Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class UserInformation : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByPortalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDECNSWUserByPortalIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDECNSWUserByEmailIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPortalLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganisationsByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrganisationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersInDomainByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUsersInDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQualifiedGroupUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDomainsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserInformation() {
            this.Url = global::Doe.Ls.ProjectTemplate.Core.Properties.Settings.Default.Doe_Ls_SampleProject_Core_VleWsUserInformation_UserInformation;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserByPortalIDCompletedEventHandler GetUserByPortalIDCompleted;
        
        /// <remarks/>
        public event GetDECNSWUserByPortalIDCompletedEventHandler GetDECNSWUserByPortalIDCompleted;
        
        /// <remarks/>
        public event GetDECNSWUserByEmailIDCompletedEventHandler GetDECNSWUserByEmailIDCompleted;
        
        /// <remarks/>
        public event GetUserRolesCompletedEventHandler GetUserRolesCompleted;
        
        /// <remarks/>
        public event GetPortalLoginCompletedEventHandler GetPortalLoginCompleted;
        
        /// <remarks/>
        public event GetOrganisationsByUserIDCompletedEventHandler GetOrganisationsByUserIDCompleted;
        
        /// <remarks/>
        public event GetAllOrganisationsCompletedEventHandler GetAllOrganisationsCompleted;
        
        /// <remarks/>
        public event FindUsersCompletedEventHandler FindUsersCompleted;
        
        /// <remarks/>
        public event FindUsersInDomainByLoginNameCompletedEventHandler FindUsersInDomainByLoginNameCompleted;
        
        /// <remarks/>
        public event FindUsersInDomainCompletedEventHandler FindUsersInDomainCompleted;
        
        /// <remarks/>
        public event IsInGroupCompletedEventHandler IsInGroupCompleted;
        
        /// <remarks/>
        public event IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventHandler IsQualifiedUserInQualifiedGroupRecursivelyCompleted;
        
        /// <remarks/>
        public event GetGroupUsersCompletedEventHandler GetGroupUsersCompleted;
        
        /// <remarks/>
        public event GetQualifiedGroupUsersCompletedEventHandler GetQualifiedGroupUsersCompleted;
        
        /// <remarks/>
        public event GetAllDomainsCompletedEventHandler GetAllDomainsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetUser", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUser(string username) {
            object[] results = this.Invoke("GetUser", new object[] {
                        username});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string username) {
            this.GetUserAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string username, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        username}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetUserByPortalID", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PortalUser GetUserByPortalID(string username) {
            object[] results = this.Invoke("GetUserByPortalID", new object[] {
                        username});
            return ((PortalUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByPortalIDAsync(string username) {
            this.GetUserByPortalIDAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserByPortalIDAsync(string username, object userState) {
            if ((this.GetUserByPortalIDOperationCompleted == null)) {
                this.GetUserByPortalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByPortalIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByPortalID", new object[] {
                        username}, this.GetUserByPortalIDOperationCompleted, userState);
        }
        
        private void OnGetUserByPortalIDOperationCompleted(object arg) {
            if ((this.GetUserByPortalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByPortalIDCompleted(this, new GetUserByPortalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetDECNSWUserByPortalID", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DECUser GetDECNSWUserByPortalID(string username) {
            object[] results = this.Invoke("GetDECNSWUserByPortalID", new object[] {
                        username});
            return ((DECUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetDECNSWUserByPortalIDAsync(string username) {
            this.GetDECNSWUserByPortalIDAsync(username, null);
        }
        
        /// <remarks/>
        public void GetDECNSWUserByPortalIDAsync(string username, object userState) {
            if ((this.GetDECNSWUserByPortalIDOperationCompleted == null)) {
                this.GetDECNSWUserByPortalIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDECNSWUserByPortalIDOperationCompleted);
            }
            this.InvokeAsync("GetDECNSWUserByPortalID", new object[] {
                        username}, this.GetDECNSWUserByPortalIDOperationCompleted, userState);
        }
        
        private void OnGetDECNSWUserByPortalIDOperationCompleted(object arg) {
            if ((this.GetDECNSWUserByPortalIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDECNSWUserByPortalIDCompleted(this, new GetDECNSWUserByPortalIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetDECNSWUserByEmailID", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DECUser GetDECNSWUserByEmailID(string email) {
            object[] results = this.Invoke("GetDECNSWUserByEmailID", new object[] {
                        email});
            return ((DECUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetDECNSWUserByEmailIDAsync(string email) {
            this.GetDECNSWUserByEmailIDAsync(email, null);
        }
        
        /// <remarks/>
        public void GetDECNSWUserByEmailIDAsync(string email, object userState) {
            if ((this.GetDECNSWUserByEmailIDOperationCompleted == null)) {
                this.GetDECNSWUserByEmailIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDECNSWUserByEmailIDOperationCompleted);
            }
            this.InvokeAsync("GetDECNSWUserByEmailID", new object[] {
                        email}, this.GetDECNSWUserByEmailIDOperationCompleted, userState);
        }
        
        private void OnGetDECNSWUserByEmailIDOperationCompleted(object arg) {
            if ((this.GetDECNSWUserByEmailIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDECNSWUserByEmailIDCompleted(this, new GetDECNSWUserByEmailIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetUserRoles", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserRoles(string userPortalId) {
            object[] results = this.Invoke("GetUserRoles", new object[] {
                        userPortalId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(string userPortalId) {
            this.GetUserRolesAsync(userPortalId, null);
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(string userPortalId, object userState) {
            if ((this.GetUserRolesOperationCompleted == null)) {
                this.GetUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRolesOperationCompleted);
            }
            this.InvokeAsync("GetUserRoles", new object[] {
                        userPortalId}, this.GetUserRolesOperationCompleted, userState);
        }
        
        private void OnGetUserRolesOperationCompleted(object arg) {
            if ((this.GetUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRolesCompleted(this, new GetUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetPortalLogin", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPortalLogin(string adUserName, bool fullPath) {
            object[] results = this.Invoke("GetPortalLogin", new object[] {
                        adUserName,
                        fullPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPortalLoginAsync(string adUserName, bool fullPath) {
            this.GetPortalLoginAsync(adUserName, fullPath, null);
        }
        
        /// <remarks/>
        public void GetPortalLoginAsync(string adUserName, bool fullPath, object userState) {
            if ((this.GetPortalLoginOperationCompleted == null)) {
                this.GetPortalLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPortalLoginOperationCompleted);
            }
            this.InvokeAsync("GetPortalLogin", new object[] {
                        adUserName,
                        fullPath}, this.GetPortalLoginOperationCompleted, userState);
        }
        
        private void OnGetPortalLoginOperationCompleted(object arg) {
            if ((this.GetPortalLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPortalLoginCompleted(this, new GetPortalLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetOrganisationsByUserID", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] GetOrganisationsByUserID(string userID, bool isPortalID) {
            object[] results = this.Invoke("GetOrganisationsByUserID", new object[] {
                        userID,
                        isPortalID});
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganisationsByUserIDAsync(string userID, bool isPortalID) {
            this.GetOrganisationsByUserIDAsync(userID, isPortalID, null);
        }
        
        /// <remarks/>
        public void GetOrganisationsByUserIDAsync(string userID, bool isPortalID, object userState) {
            if ((this.GetOrganisationsByUserIDOperationCompleted == null)) {
                this.GetOrganisationsByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganisationsByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetOrganisationsByUserID", new object[] {
                        userID,
                        isPortalID}, this.GetOrganisationsByUserIDOperationCompleted, userState);
        }
        
        private void OnGetOrganisationsByUserIDOperationCompleted(object arg) {
            if ((this.GetOrganisationsByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganisationsByUserIDCompleted(this, new GetOrganisationsByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetAllOrganisations", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllOrganisations() {
            object[] results = this.Invoke("GetAllOrganisations", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrganisationsAsync() {
            this.GetAllOrganisationsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllOrganisationsAsync(object userState) {
            if ((this.GetAllOrganisationsOperationCompleted == null)) {
                this.GetAllOrganisationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrganisationsOperationCompleted);
            }
            this.InvokeAsync("GetAllOrganisations", new object[0], this.GetAllOrganisationsOperationCompleted, userState);
        }
        
        private void OnGetAllOrganisationsOperationCompleted(object arg) {
            if ((this.GetAllOrganisationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrganisationsCompleted(this, new GetAllOrganisationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/FindUsers", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LightUser[] FindUsers(string searchString, int numToGet) {
            object[] results = this.Invoke("FindUsers", new object[] {
                        searchString,
                        numToGet});
            return ((LightUser[])(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersAsync(string searchString, int numToGet) {
            this.FindUsersAsync(searchString, numToGet, null);
        }
        
        /// <remarks/>
        public void FindUsersAsync(string searchString, int numToGet, object userState) {
            if ((this.FindUsersOperationCompleted == null)) {
                this.FindUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersOperationCompleted);
            }
            this.InvokeAsync("FindUsers", new object[] {
                        searchString,
                        numToGet}, this.FindUsersOperationCompleted, userState);
        }
        
        private void OnFindUsersOperationCompleted(object arg) {
            if ((this.FindUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersCompleted(this, new FindUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/FindUsersInDomainByLoginName", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LightUser[] FindUsersInDomainByLoginName(string searchString, int numToGet, string domain, bool searchByloginName) {
            object[] results = this.Invoke("FindUsersInDomainByLoginName", new object[] {
                        searchString,
                        numToGet,
                        domain,
                        searchByloginName});
            return ((LightUser[])(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersInDomainByLoginNameAsync(string searchString, int numToGet, string domain, bool searchByloginName) {
            this.FindUsersInDomainByLoginNameAsync(searchString, numToGet, domain, searchByloginName, null);
        }
        
        /// <remarks/>
        public void FindUsersInDomainByLoginNameAsync(string searchString, int numToGet, string domain, bool searchByloginName, object userState) {
            if ((this.FindUsersInDomainByLoginNameOperationCompleted == null)) {
                this.FindUsersInDomainByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersInDomainByLoginNameOperationCompleted);
            }
            this.InvokeAsync("FindUsersInDomainByLoginName", new object[] {
                        searchString,
                        numToGet,
                        domain,
                        searchByloginName}, this.FindUsersInDomainByLoginNameOperationCompleted, userState);
        }
        
        private void OnFindUsersInDomainByLoginNameOperationCompleted(object arg) {
            if ((this.FindUsersInDomainByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersInDomainByLoginNameCompleted(this, new FindUsersInDomainByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/FindUsersInDomain", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LightUser[] FindUsersInDomain(string searchString, int numToGet, string domain) {
            object[] results = this.Invoke("FindUsersInDomain", new object[] {
                        searchString,
                        numToGet,
                        domain});
            return ((LightUser[])(results[0]));
        }
        
        /// <remarks/>
        public void FindUsersInDomainAsync(string searchString, int numToGet, string domain) {
            this.FindUsersInDomainAsync(searchString, numToGet, domain, null);
        }
        
        /// <remarks/>
        public void FindUsersInDomainAsync(string searchString, int numToGet, string domain, object userState) {
            if ((this.FindUsersInDomainOperationCompleted == null)) {
                this.FindUsersInDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUsersInDomainOperationCompleted);
            }
            this.InvokeAsync("FindUsersInDomain", new object[] {
                        searchString,
                        numToGet,
                        domain}, this.FindUsersInDomainOperationCompleted, userState);
        }
        
        private void OnFindUsersInDomainOperationCompleted(object arg) {
            if ((this.FindUsersInDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUsersInDomainCompleted(this, new FindUsersInDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/IsInGroup", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsInGroup(string userName, string groupName) {
            object[] results = this.Invoke("IsInGroup", new object[] {
                        userName,
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsInGroupAsync(string userName, string groupName) {
            this.IsInGroupAsync(userName, groupName, null);
        }
        
        /// <remarks/>
        public void IsInGroupAsync(string userName, string groupName, object userState) {
            if ((this.IsInGroupOperationCompleted == null)) {
                this.IsInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInGroupOperationCompleted);
            }
            this.InvokeAsync("IsInGroup", new object[] {
                        userName,
                        groupName}, this.IsInGroupOperationCompleted, userState);
        }
        
        private void OnIsInGroupOperationCompleted(object arg) {
            if ((this.IsInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInGroupCompleted(this, new IsInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/IsQualifiedUserInQualifiedGroupRecursi" +
            "vely", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsQualifiedUserInQualifiedGroupRecursively(string qualifiedUserName, string qualifiedRoleName) {
            object[] results = this.Invoke("IsQualifiedUserInQualifiedGroupRecursively", new object[] {
                        qualifiedUserName,
                        qualifiedRoleName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsQualifiedUserInQualifiedGroupRecursivelyAsync(string qualifiedUserName, string qualifiedRoleName) {
            this.IsQualifiedUserInQualifiedGroupRecursivelyAsync(qualifiedUserName, qualifiedRoleName, null);
        }
        
        /// <remarks/>
        public void IsQualifiedUserInQualifiedGroupRecursivelyAsync(string qualifiedUserName, string qualifiedRoleName, object userState) {
            if ((this.IsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted == null)) {
                this.IsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted);
            }
            this.InvokeAsync("IsQualifiedUserInQualifiedGroupRecursively", new object[] {
                        qualifiedUserName,
                        qualifiedRoleName}, this.IsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted, userState);
        }
        
        private void OnIsQualifiedUserInQualifiedGroupRecursivelyOperationCompleted(object arg) {
            if ((this.IsQualifiedUserInQualifiedGroupRecursivelyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsQualifiedUserInQualifiedGroupRecursivelyCompleted(this, new IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetGroupUsers", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LightUser[] GetGroupUsers(string groupName) {
            object[] results = this.Invoke("GetGroupUsers", new object[] {
                        groupName});
            return ((LightUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(string groupName) {
            this.GetGroupUsersAsync(groupName, null);
        }
        
        /// <remarks/>
        public void GetGroupUsersAsync(string groupName, object userState) {
            if ((this.GetGroupUsersOperationCompleted == null)) {
                this.GetGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupUsersOperationCompleted);
            }
            this.InvokeAsync("GetGroupUsers", new object[] {
                        groupName}, this.GetGroupUsersOperationCompleted, userState);
        }
        
        private void OnGetGroupUsersOperationCompleted(object arg) {
            if ((this.GetGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupUsersCompleted(this, new GetGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetQualifiedGroupUsers", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LightUser[] GetQualifiedGroupUsers(string qualifiedGroupName) {
            object[] results = this.Invoke("GetQualifiedGroupUsers", new object[] {
                        qualifiedGroupName});
            return ((LightUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQualifiedGroupUsersAsync(string qualifiedGroupName) {
            this.GetQualifiedGroupUsersAsync(qualifiedGroupName, null);
        }
        
        /// <remarks/>
        public void GetQualifiedGroupUsersAsync(string qualifiedGroupName, object userState) {
            if ((this.GetQualifiedGroupUsersOperationCompleted == null)) {
                this.GetQualifiedGroupUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualifiedGroupUsersOperationCompleted);
            }
            this.InvokeAsync("GetQualifiedGroupUsers", new object[] {
                        qualifiedGroupName}, this.GetQualifiedGroupUsersOperationCompleted, userState);
        }
        
        private void OnGetQualifiedGroupUsersOperationCompleted(object arg) {
            if ((this.GetQualifiedGroupUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQualifiedGroupUsersCompleted(this, new GetQualifiedGroupUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cli.edu.au/tli/ptrs/webservices/GetAllDomains", RequestNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", ResponseNamespace="http://www.cli.edu.au/tli/ptrs/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllDomains() {
            object[] results = this.Invoke("GetAllDomains", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDomainsAsync() {
            this.GetAllDomainsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDomainsAsync(object userState) {
            if ((this.GetAllDomainsOperationCompleted == null)) {
                this.GetAllDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDomainsOperationCompleted);
            }
            this.InvokeAsync("GetAllDomains", new object[0], this.GetAllDomainsOperationCompleted, userState);
        }
        
        private void OnGetAllDomainsOperationCompleted(object arg) {
            if ((this.GetAllDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDomainsCompleted(this, new GetAllDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class User {
        
        private string memberOfField;
        
        private string userNameField;
        
        private string givenNameField;
        
        private string surnameField;
        
        private string emailField;
        
        private string titleField;
        
        private string displayNameField;
        
        private string pathField;
        
        private InfoSource informationSourceField;
        
        /// <remarks/>
        public string MemberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string GivenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public InfoSource InformationSource {
            get {
                return this.informationSourceField;
            }
            set {
                this.informationSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public enum InfoSource {
        
        /// <remarks/>
        IN_AD,
        
        /// <remarks/>
        IN_CACHE_AD_DOWN,
        
        /// <remarks/>
        IN_CACHE_NOT_AD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class LightUser {
        
        private string userNameField;
        
        private string emailField;
        
        private string displayNameField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class Location {
        
        private string idField;
        
        private string nameField;
        
        private string customProperty1Field;
        
        private string customProperty2Field;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomProperty1 {
            get {
                return this.customProperty1Field;
            }
            set {
                this.customProperty1Field = value;
            }
        }
        
        /// <remarks/>
        public string CustomProperty2 {
            get {
                return this.customProperty2Field;
            }
            set {
                this.customProperty2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class DECUser {
        
        private string dECUserNameField;
        
        private string networkLoginField;
        
        private string givenNameField;
        
        private string surnameField;
        
        private string emailField;
        
        private string titleField;
        
        private string displayNameField;
        
        private string phoneNumberField;
        
        private string postCodeField;
        
        private string addressField;
        
        private bool isTeacherField;
        
        private bool isSchoolBasedField;
        
        private bool isStudentField;
        
        private string staffIdField;
        
        private int schoolIdField;
        
        private string schoolNameField;
        
        private string deptIdField;
        
        private string depatNameField;
        
        private bool isPrincipalField;
        
        private string simpleDisplayNameField;
        
        private string simpleDECUserNameField;
        
        private string[] rolesField;
        
        private string pathField;
        
        private string[] groupsField;
        
        private string[] memberOfField;
        
        /// <remarks/>
        public string DECUserName {
            get {
                return this.dECUserNameField;
            }
            set {
                this.dECUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string NetworkLogin {
            get {
                return this.networkLoginField;
            }
            set {
                this.networkLoginField = value;
            }
        }
        
        /// <remarks/>
        public string GivenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTeacher {
            get {
                return this.isTeacherField;
            }
            set {
                this.isTeacherField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSchoolBased {
            get {
                return this.isSchoolBasedField;
            }
            set {
                this.isSchoolBasedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsStudent {
            get {
                return this.isStudentField;
            }
            set {
                this.isStudentField = value;
            }
        }
        
        /// <remarks/>
        public string StaffId {
            get {
                return this.staffIdField;
            }
            set {
                this.staffIdField = value;
            }
        }
        
        /// <remarks/>
        public int SchoolId {
            get {
                return this.schoolIdField;
            }
            set {
                this.schoolIdField = value;
            }
        }
        
        /// <remarks/>
        public string SchoolName {
            get {
                return this.schoolNameField;
            }
            set {
                this.schoolNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeptId {
            get {
                return this.deptIdField;
            }
            set {
                this.deptIdField = value;
            }
        }
        
        /// <remarks/>
        public string DepatName {
            get {
                return this.depatNameField;
            }
            set {
                this.depatNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrincipal {
            get {
                return this.isPrincipalField;
            }
            set {
                this.isPrincipalField = value;
            }
        }
        
        /// <remarks/>
        public string SimpleDisplayName {
            get {
                return this.simpleDisplayNameField;
            }
            set {
                this.simpleDisplayNameField = value;
            }
        }
        
        /// <remarks/>
        public string SimpleDECUserName {
            get {
                return this.simpleDECUserNameField;
            }
            set {
                this.simpleDECUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public string[] MemberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2117.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.cli.edu.au/tli/ptrs/webservices/")]
    public partial class PortalUser {
        
        private string userNameField;
        
        private string givenNameField;
        
        private string surNameField;
        
        private string emailField;
        
        private string titleField;
        
        private string displayNameField;
        
        private string locationCodeField;
        
        private string[] rolesField;
        
        private string informationField;
        
        private string netUserIdField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string GivenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
            }
        }
        
        /// <remarks/>
        public string SurName {
            get {
                return this.surNameField;
            }
            set {
                this.surNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string LocationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
        
        /// <remarks/>
        public string Information {
            get {
                return this.informationField;
            }
            set {
                this.informationField = value;
            }
        }
        
        /// <remarks/>
        public string NetUserId {
            get {
                return this.netUserIdField;
            }
            set {
                this.netUserIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetUserByPortalIDCompletedEventHandler(object sender, GetUserByPortalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByPortalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByPortalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PortalUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PortalUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetDECNSWUserByPortalIDCompletedEventHandler(object sender, GetDECNSWUserByPortalIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDECNSWUserByPortalIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDECNSWUserByPortalIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DECUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DECUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetDECNSWUserByEmailIDCompletedEventHandler(object sender, GetDECNSWUserByEmailIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDECNSWUserByEmailIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDECNSWUserByEmailIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DECUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DECUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetUserRolesCompletedEventHandler(object sender, GetUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetPortalLoginCompletedEventHandler(object sender, GetPortalLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPortalLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPortalLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetOrganisationsByUserIDCompletedEventHandler(object sender, GetOrganisationsByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganisationsByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganisationsByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetAllOrganisationsCompletedEventHandler(object sender, GetAllOrganisationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrganisationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrganisationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FindUsersCompletedEventHandler(object sender, FindUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LightUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LightUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FindUsersInDomainByLoginNameCompletedEventHandler(object sender, FindUsersInDomainByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersInDomainByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersInDomainByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LightUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LightUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FindUsersInDomainCompletedEventHandler(object sender, FindUsersInDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUsersInDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUsersInDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LightUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LightUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void IsInGroupCompletedEventHandler(object sender, IsInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventHandler(object sender, IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsQualifiedUserInQualifiedGroupRecursivelyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetGroupUsersCompletedEventHandler(object sender, GetGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LightUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LightUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetQualifiedGroupUsersCompletedEventHandler(object sender, GetQualifiedGroupUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQualifiedGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQualifiedGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LightUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LightUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetAllDomainsCompletedEventHandler(object sender, GetAllDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
<#@ template language="C#"inherits="MVCTemplate.BaseTemplate" #> 
<#@ assembly name="System.Core" #>
<#@ import namespace="Doe.Ls.EntityBase.Helper" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter name="AppNamespace" type="System.String"#>
<#@ parameter name="EntityContext" type="System.Data.Entity.DbContext"#>
<# T4Helper.SetAssemblyClassNameFormatFromContext(EntityContext); #>
<#@ parameter name="EntityType" type="System.Data.Entity.Core.Metadata.Edm.EntityType"#>
<#    var helper=new EdmMetadataHelper(EntityContext);

#>
@model <#=EntityType.Name#> 
@{
    ViewBagWrapper.InfoBag.SetTitle("<#=        T4Helper.Wordify(T4Helper.CleanClassName(EntityType.Name))#> Details",ViewData);
    var user = ViewBagWrapper.UserInfoExtensionBag.GetCurrentUser(ViewData);
    var task = ViewBagWrapper.TaskBag.GetCurrentTask(ViewData);	
}
<#    foreach (var property in T4Helper.ListPropertiesWithFkInfo(EntityType)) #>
<#    {
    if (property == null) continue;
 #>
<#        if(T4Helper.PropertyOperations.IsKey(property.Property,EntityType))#>
<#        {#> 
@Html.HiddenFor(model => model.<#= property.Property.Name#>)
<#        }#>
<div class="form-group">
    <#if (property.FK){ #>
	    <span class="col-lg-4 col-form-label">@Html.DisplayNameFor(model => model.<#= property.PareEntityType.Name#>)</span>
<#            }else{ #>
    <span class="col-lg-4 col-form-label">@Html.DisplayNameFor(model => model.<#= property.Property.Name#>)</span>
    <#} #>   
    <#    GenerateDisplayValueForProperty(property); #>
</div>
<# } #>
<#+
    void GenerateDisplayValueForProperty(PropMeta property)
    {
        if (!property.FK && !T4Helper.PropertyOperations.IsRichText(property.Property, this.EntityType))
        {
        #>
    <div class="col-lg-8"><p class="form-control-plaintext">@Html.DisplayFor(model => model.<#=property.Property.Name #>)</p></div>
        <#+ 
        }

        if (!property.FK && T4Helper.PropertyOperations.IsRichText(property.Property, this.EntityType))
        {
        #>
    <div class="col-lg-8"><p class="form-control-plaintext">@Html.Raw(Model.<#=property.Property.Name #>)</p></div>
        <#+ 
        }


                if (property.FK && !T4Helper.PropertyOperations.IsRichText(property.FkProperty, this.EntityType))
        {
        #>
    <div class="col-lg-8"><p class="form-control-plaintext">@Html.DisplayFor(model => model.<#=property.PareEntityType.Name #>.<#= T4Helper.MetadataOperations.GetDispayPropertyName(property.PareEntityType) #>)</p>
    </div>
        <#+ 
        }


         if (property.FK && T4Helper.PropertyOperations.IsRichText(property.FkProperty, this.EntityType))
        {
        #>
    <div class="col-lg-8"><p class="form-control-plaintext">@Html.Raw(Model.<#=property.PareEntityType.Name #>.<#= T4Helper.MetadataOperations.GetDispayPropertyName(property.PareEntityType) #>)</p></div>
        <#+ 
        }

    }
    #>


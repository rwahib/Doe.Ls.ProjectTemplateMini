

@model KeyRelationship
@{
    ViewBagWrapper.InfoBag.SetTitle("Edit Key relationship",ViewData);
    var user = ViewBagWrapper.UserInfoExtensionBag.GetCurrentUser(ViewData);
    var task = ViewBagWrapper.TaskBag.GetCurrentTask(ViewData);
    var errors = ViewBagWrapper.ErrorBag.GetErrors(ViewData);    

    ViewBagWrapper.FormOperations.SetFormType(FormType.Edit, ViewData);
    ViewBagWrapper.FormOperations.SetRequestType(RequestType.Direct, ViewData);
}

<div class="page-header">
    <h2>@ViewBagWrapper.InfoBag.GetTitle(ViewData)</h2>
</div>

<div class="error">
    <ul class="list-group">
     @if (errors != null) 
    {
        foreach (var error in errors)
        {
            <li class="list-group-item ">
                <label class="validation-error">@string.Format("{0} has error:", error.PropertyName.Wordify())</label>
                <label class="validation-error">@string.Format("{0}", error.ErrorMessage)</label>
            </li>
        }
    }
    </ul>
</div>

<div id="formTab" class="card.card-body">
    <form class="" role="form" method="POST" id="form-keyRelationship-edit" data-null-model="@ViewBagWrapper.FormOperations.GetNullModel(ViewData)">
    @if (task != null && task.User.IsDoEUser)
    {
        <div class="text-danger">Access denied. Please contact your System Administrator.</div>
        
    }
    else
    {
        @Html.Partial("_partial/_update")
        <p>
            <button type="submit" class="btn btn-primary">Save</button>
            &nbsp;|&nbsp;
            <a href="@Url.Action("ManageKeyRelationships", "RoleDescription", new {id = Model.RoleDescriptionId})" class="btn btn-primary">Key Relationship List<span class="glyphicon glyphicon-th-list"></span>            </a>
        </p>
    }
    </form>
</div>
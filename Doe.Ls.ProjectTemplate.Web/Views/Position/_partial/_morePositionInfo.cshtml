@using System.Diagnostics
@model PositionInformation
@{
    var user = ViewBagWrapper.UserInfoExtensionBag.GetCurrentUser(ViewData);

    var formMethod = ViewBagWrapper.FormOperations.GetFormMethod(ViewData);

    var formType = ViewBagWrapper.FormOperations.GetFormType(ViewData);
    var requestType = ViewBagWrapper.FormOperations.GetRequestType(ViewData);
    var positionItems = ViewBagWrapper.ListBag.GetList("positionItems", ViewData);
    var positionTypeItems = ViewBagWrapper.ListBag.GetList("positionTypeItems", ViewData);
    var employeeTypeItems = ViewBagWrapper.ListBag.GetList("employeeTypeItems", ViewData);
    var occupationTypeItems = ViewBagWrapper.ListBag.GetList("occupationTypeItems", ViewData);
    var positionStatusTypeItems = ViewBagWrapper.ListBag.GetList("positionStatusItems", ViewData);

    var task = ViewBagWrapper.TaskBag.GetCurrentTask(ViewData);
    var workflowEngine = ViewBagWrapper.WorkflowBag.GetWorkflowEngine(ViewData);
    var position = workflowEngine.WorkflowObject as Position;
    ViewData["PositionInfo"] = Model;

}


<div id="formTab" class="card.card-body">
    <form class="" data-tracking-enabled="true" role="form" method="POST" action="@Url.Action("Edit", "PositionInformation")"
          id="form-positionInformation-basicDetails">
        @Html.HiddenFor(model => model.PositionId)
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="col-form-label col-lg-4"></label>

                        <div class="col-lg-8">
                            <span>Fields marked with an asterisk (*) are compulsory</span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6"></div>
            </div>
        </div>


        <div class='row'>
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="PositionTypeCode" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.PositionType)<span class="mandatory">*</span></label>

                        <div class="col-lg-8">
                            @Html.DropDownList("PositionTypeCode", positionTypeItems, "Select a position type ...", new { id = "PositionTypeCode", @class = "form-control select2picker", Required = "Required" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="PositionEndDate" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.PositionEndDate)<span id="spn-end-date" class="mandatory">*</span></label>

                        <div class="col-lg-8">
                            <input type="text" data-date="date" name="PositionEndDate" id="PositionEndDate"
                                   class="form-control" placeholder="e.g. 20-Oct-2016"
                                   value="@Model.PositionEndDate.ToEasyDateFormat()" 
                                   data-fv-date-format="DD/MM/YYYY" onkeydown="return false;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class='row'>
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group ">
                        <label for="PositionStatusCode" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.PositionStatusCode)<span class="mandatory">*</span></label>

                        <div class="col-lg-8">
                            @Html.DropDownList("PositionStatusCode", positionStatusTypeItems, "Select a position status ...", new { id = "PositionStatusCode", @class = "form-control select2picker", Required = "Required" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="PositionFTE" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.PositionFTE) <span class="mandatory">*</span></label>

                        <div class="col-lg-8">
                            <div class="input-group">

                                <input type="text" name="PositionFTE" id="PositionFTE" class="form-control" placeholder="e.g. 0.5, 1.0" min="0.1" max="1.0"
                                       required
                                       data-fv-notempty-message='Position FTE is required'
                                       value="@Model.PositionFTE" />


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class='row'>
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="EmployeeTypeCode" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.EmployeeTypeCode)<span class="mandatory">*</span></label>

                        <div class="col-lg-8">
                            @Html.DropDownList("EmployeeTypeCode", employeeTypeItems, "Select a employee type ...", new { id = "EmployeeTypeCode", @class = "form-control select2picker", Required = "Required" })
                        </div>
                    </div>
                </div>



                <div class="col-lg-6">
                    <div class="form-group ">
                        <label for="OccupationTypeCode" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.OccupationTypeCode)<span class="mandatory">*</span></label>

                        <div class="col-lg-8">

                            @Html.DropDownList("OccupationTypeCode", occupationTypeItems, "Select an occupation type ...", new { id = "OccupationTypeCode", @class = "form-control select2picker", Required = "Required" })
                        </div>
                    </div>
                </div>



            </div>
        </div>

        <div class='row'>
            <div class="col-lg-12">

                <div class="col-lg-6">
                    <div class="form-group ">
                        <label for="OlderPositionNumber1" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.OlderPositionNumber1)</label>

                        <div class="col-lg-8">
                            <div class="input-group">

                                <input type="text" name="OlderPositionNumber1" maxlength="7" id="OlderPositionNumber1" class="form-control" placeholder="Please enter older position number 1" value="@Model.OlderPositionNumber1" />

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="OlderPositionNumber2" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.OlderPositionNumber2)</label>

                        <div class="col-lg-8">
                            <div class="input-group">

                                <input type="text" name="OlderPositionNumber2" maxlength="7" id="OlderPositionNumber2" class="form-control" placeholder="Please enter older position number 2" value="@Model.OlderPositionNumber2" />

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class='row'>
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label for="OlderPositionNumber3" class="col-form-label col-lg-4">@Html.DisplayNameFor(model => model.OlderPositionNumber3)</label>

                        <div class="col-lg-8">
                            <div class="input-group">

                                <input type="text" name="OlderPositionNumber3" maxlength="7" id="OlderPositionNumber3" class="form-control" placeholder="Please enter older position number 3" value="@Model.OlderPositionNumber3" />

                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-lg-6">

                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>

    
    @if (position!=null&&!position.RolePositionDescription.IsPositionDescription)
        {
            <div class='row'>
                <div class="col-lg-12">
                    <div class="form-group ">
                        <label for="OtherOverview" class="col-form-label col-lg-2">Additional overview</label>

                        <div class="col-lg-10">
                            <div class="input-group">

                                <textarea name="OtherOverview" id="OtherOverview" class="form-control tinymce-rich-small " placeholder="Please enter some notes">@Model.OtherOverview</textarea>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class='row'>
            <div class="col-lg-12">
                <div class="form-group ">
                    <label for="PositionNote" class="col-form-label col-lg-2">Note</label>

                    <div class="col-lg-10">
                        <div class="input-group">

                            <textarea name="PositionNote" id="PositionNote" class="form-control tinymce-simple " placeholder="Please enter some notes"></textarea>

                        </div>
                    </div>
                </div>
            </div>
        </div>



        @if(Model.PositionNotes != null && Model.PositionNotes.Any())
            {
            <div class='row'>
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-sm ">

                            <thead>
                                <tr>
                                    <th>
                                        Notes
                                    </th>

                                    <th>
                                        Date
                                    </th>

                                    <th>
                                        Created by
                                    </th>

                                    <th class="all"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @* For ajax dataTable empty the tbody *@
                                @foreach(var note in Model.PositionNotes.OrderByDescending(p => p.LastModifiedDate))
                                    {
                                    <tr>
                                        <td>

                                            @Html.Raw(note.Notes)
                                        </td>
                                        <td>

                                            @note.LastModifiedDate
                                        </td>
                                        <td>

                                            @note.CreatedBy
                                            at @note.CreatedDate
                                        </td>

                                        <td>
                                            @if(task != null && task.CanEditNotes(Model, note))
                                                {
                                                <div class="btn-group-vertical">
                                                    <a href="@Url.Action("Edit", "PositionNote", new {id = note.PositionNoteId, ajax = true})" class="btn btn-primary pop-up-notes" data-toggle="modal" data-target="#vlePluginModal">Edit</a>
                                                    <a href="@Url.Action("Delete", "PositionNote", new {id = note.PositionNoteId, ajax = true})" class="btn btn-primary pop-up-notes" data-toggle="modal" data-target="#vlePluginModal">Delete</a>
                                                </div>
                                                }

                                        </td>
                                    </tr>
                                    }
                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
            }
        <div class='row'>
            <div class="col-lg-offset-10 col-lg-1">
                <p>
                    <button type="submit" class="btn btn-primary">Save & Next</button>
                </p>
            </div>
        </div>
    </form>
</div>

@functions
{

}



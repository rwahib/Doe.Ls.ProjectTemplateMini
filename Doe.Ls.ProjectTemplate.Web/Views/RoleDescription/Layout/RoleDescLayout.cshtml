@model RoleDescription
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var task = ViewBagWrapper.TaskBag.GetCurrentTask(ViewData);
    var path = "";
    if (Model != null && Model.RoleDescriptionId != 0)
    {
        path = ProjectTemplateSettings.Site.OldDescriptionFileFolder + Model.OldPDFileName;
    }
    var formType = ViewBagWrapper.FormOperations.GetFormType(ViewData);
    var workflowEngine = ViewBagWrapper.WorkflowBag.GetWorkflowEngine(ViewData);
    var roleDescriptionPrivilege = Enums.Privilege.AccessDeniedPrivilege;

    if (Model != null && Model.RolePositionDescription != null && (Model.RolePositionDescription.RolePositionDescId >= -1))
    {
        if (workflowEngine != null)
        {
            roleDescriptionPrivilege = workflowEngine.GetWorkflowObjectPrivilege();
        }
    }
    else
    {
        roleDescriptionPrivilege = task.GetWorkflowObjectPrivilege(WorkflowObjectType.RoleDescription);
    }

    var count = ViewBagWrapper.VariableBag.GetIntVariable("LinkedPositionsCount", ViewData);

    var wizardStep = ViewBagWrapper.RoleDescBag.GetRoleDescWizardBag(ViewData);
}
<div class="wrapper" id="wrapper-RoleDescription">

    <div class="row">
        <div class="col-lg-12">
            <nav id="event-menu" class="navbar navbar-gef navbar-default">
                <div class="navbar-header">
                    <button class="btn btn-success navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" id="ui-collapse-298">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                </div>
                <div class="col-lg-12">
                    @Html.Partial("_partial/_breadcrumb", new Breadcrumb { Display = "Back to role description list", ServerLink = "~/RoleDescription/" })

                </div>
                <!--buttons-->

                <div class="navbar-collapse collapse">
                    <ul id="role_nav" class="nav navbar-nav navbar-left">
                        @if (formType == FormType.Create || roleDescriptionPrivilege.CanEdit)
                        {
                            <li class="@RenderSection("BasicDetails", false)">
                                <a href="@Url.Action("ManageBasicDetails", new {id = Model.RoleDescriptionId})">Basic details</a>
                            </li>
                        }
                        @if (Model != null && Model.RoleDescriptionId > 0)
                        {


                            if (Model.RoleDescriptionId > 0)
                            {
                                if (roleDescriptionPrivilege.CanEdit)
                                {
                                    <li class="@RenderSection("KeyAccountabilities", false)">
                                        <a href="@Url.Action("ManageKeyAccountabilities", new {id = Model.RoleDescriptionId})">Key accountabilities/challenges</a>
                                    </li>

                                    <li class="@RenderSection("Budget", false)">
                                        <a href="@Url.Action("ManageBudget", new {id = Model.RoleDescriptionId})">Budget/expenditure</a>
                                    </li>
                                    <li class="@RenderSection("EssentialRequirements", false)">
                                        <a href="@Url.Action("ManageEssentialReq", new {id = Model.RoleDescriptionId})">Essential requirements</a>
                                    </li>
                                    <li class="@RenderSection("KeyRelationships", false)">
                                        <a href="@Url.Action("ManageKeyRelationships", new {id = Model.RoleDescriptionId})">Key relationships</a>
                                    </li>
                                    <li class="@RenderSection("CapabilityFramework", false)">
                                        <a href="@Url.Action("ManageCapabilities", new {id = Model.RoleDescriptionId})">Capability Framework</a>
                                    </li>
                                }

                                if (roleDescriptionPrivilege.CanPerformActions)
                                {
                                    <li class="@RenderSection("LinkedPositionsActive", false)">
                                        @if (count > 0)
                                        {
                                            <a href="@Url.Action("ManageLinkedPositions", new {id = Model.RoleDescriptionId})">Linked positions(@count)</a>
                                        }
                                        else
                                        {
                                            <a href="#">Linked positions(@count)</a>

                                        }
                                    </li>

                                    <li class="@RenderSection("ActionsActive", false)">
                                        <a href="@Url.Action("ManageActions", new {id = Model.RoleDescriptionId})">Actions</a>
                                    </li>
                                }


                                if (roleDescriptionPrivilege == Enums.Privilege.ReadOnlyPrivilege)
                                {


                                    @RenderSection("LinkedPositionsActive", false)
                                    if (wizardStep != Enums.RoleDescWizardStep.LinkedPositions)
                                    {
                                        <li class="@RenderSection("LinkedPositionsActive", false)">
                                            @if (count > 0)
                                            {
                                            <a href="@Url.Action("ManageLinkedPositions", new {id = Model.RoleDescriptionId})">Linked positions(@count)</a>
                                            }
                                            else
                                            {
                                            <a href="#">Linked positions(@count)</a>

                                            }
                                        </li>
                                    }

                                }

                                @RenderSection("SummaryActive", false)
                                if (wizardStep != Enums.RoleDescWizardStep.Summary)
                                {
                                    <li class="@RenderSection("SummaryActive", false)" id="position_summary">

                                        <a href="@Url.Action("ManageSummary", new {id = Model.RoleDescriptionId})">Summary</a>
                                    </li>
                                    }

                                if(roleDescriptionPrivilege.CanPerformActions) {
                                    @RenderSection("History", false)
                                    if(wizardStep != Enums.RoleDescWizardStep.History) {
                                        <li class="@RenderSection("History", false)" id="position_history">
                                            <a href="@Url.Action("WfHistory", new {id = Model.RoleDescriptionId})">History</a>
                                        </li>
                                        }
                                    if(ProjectTemplateSettings.Site.TrimIntegration && task.User.HasAdminOrPowerRole()) {
                                        <li class="@RenderSection("Trim", false)" id="position-description-TRIM">
                                            <a href="@Url.Action("Trim", new {id = Model.RoleDescriptionId})" title="Trim">HP RM</a>
                                        </li>
                                        }

                                    }

                                }

                            }
                    </ul>
                </div>
            </nav>

        </div>
    </div>

    <div class="row page-header">
        <div class="col-lg-6">
            @if (wizardStep == Enums.RoleDescWizardStep.Summary)
            {
                <h2 class="pageHeading">Summary</h2>
            }
            @if(ProjectTemplateSettings.Site.TrimIntegration) {
                if(wizardStep == Enums.RoleDescWizardStep.Trim) {
                    <h2 class="pageHeading">HPE Content Manager</h2>
                    }
                }

            @if (wizardStep == Enums.RoleDescWizardStep.History)
            {
                <h2 class="pageHeading">History</h2>
            }
            @if (!roleDescriptionPrivilege.CanEdit)
            {
                if (wizardStep == Enums.RoleDescWizardStep.LinkedPositions)
                {
                    <h2 class="pageHeading">Linked positions</h2>
                }
            }
        </div>
        <div class="col-lg-6 badge badge-pill">

            @if (Model != null && Model.RolePositionDescription != null && Model.RolePositionDescription.Grade != null)
            {
                <div class="col-lg-2 col-lg-offset-6 col-form-label font-bold noPadding" tabindex="0">Title:</div>
                <div class="col-lg-4 text-left" tabindex="0">@Model.RolePositionDescription.Title</div>


                <div class="col-lg-2 col-lg-offset-6 col-form-label font-bold noPadding" tabindex="0">DOC#:</div>
                        <div class="col-lg-4 text-left" tabindex="0">@Model.RolePositionDescription.DocNumber</div>

                        <div class="col-lg-2 col-lg-offset-6 col-form-label font-bold noPadding" tabindex="0">Grade:</div>
                        <div class="col-lg-4 text-left" tabindex="0">@Model.RolePositionDescription.Grade.GradeTitle (@Model.RolePositionDescription.GradeCode)</div>

                        <div class="row-fluid bottomSpacer">
                            <div class="col-lg-2 col-lg-offset-6 col-form-label font-bold noPadding" tabindex="0">Status:</div>
                            <div class="col-lg-4 text-left @Model.RolePositionDescription.StatusValue" tabindex="0">@Model.RolePositionDescription.StatusValue</div>
                        </div>

            }
            @if (!string.IsNullOrEmpty(path) && !string.IsNullOrEmpty(Model.OldPDFileName) && System.IO.File.Exists(path))
            {
                <div class="col-lg-2 col-lg-offset-8 col-form-label font-bold noPadding" tabindex="0">
                    <a href="@Url.Action("OpenOldDescFile", new {oldDescFileName = Model.OldPDFileName})"
                       class="float-right btn btn-primary">Old description file</a>
                </div>
            }
        </div>

    </div>

    @RenderBody()
</div>

<#@ template language="C#"inherits="BaseTemplate" #> 
<#@ assembly name="System.Core" #>

<#@ import namespace="Doe.Ls.EntityBase.Helper" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ parameter name="AppNamespace" type="System.String"#>
<#@ parameter name="EntityContext" type="System.Data.Entity.DbContext"#>
<#@ parameter name="EntityType" type="System.Data.Entity.Core.Metadata.Edm.EntityType"#>

<# T4Helper.SetAssemblyClassNameFormatFromContext(EntityContext); #>

<#    

var helper=new EdmMetadataHelper(EntityContext);
    
#> 

@model <#=EntityType.Name#>
@{
    ViewBagWrapper.InfoBag.SetTitle("Detail <#=T4Helper.Wordify(T4Helper.CleanClassName(EntityType.Name))#>",ViewData);
    var user = ViewBagWrapper.UserInfoExtensionBag.GetCurrentUser(ViewData);
    var task = ViewBagWrapper.TaskBag.GetCurrentTask(ViewData);
}

<div class="page-header">
    <h2>@ViewBagWrapper.InfoBag.GetTitle(ViewData)</h2>
</div>

<div id="formTab" class="card.card-body">
    <form class="" role="form" method="POST" id=<#=T4Helper.GetFormId(EntityType,FormType.Details)#>>
        @Html.AntiForgeryToken()
        <p>
            <a href="@Url.Action("Edit", new { <#= GetKeyName()#>  = Model.<#=T4Helper.GetSingleKeyProperty(EntityType).Name#> })" class="btn btn-primary">Edit</a>
            <a href="@Url.Action("Index")" class="btn btn-primary"><#=T4Helper.CleanClassName(EntityType.Name)#> List <span class="glyphicon glyphicon-th-list"></span></a>
        </p>
    
        @Html.Partial("_partial/_details")
        <p>
            <a href="@Url.Action("Edit", new { <#= GetKeyName()#>  = Model.<#=T4Helper.GetSingleKeyProperty(EntityType).Name#> })" class="btn btn-primary">Edit</a>
            <a href="@Url.Action("Index")" class="btn btn-primary"><#=T4Helper.CleanClassName(EntityType.Name)#> List <span class="glyphicon glyphicon-th-list"></span></a>
        </p>
    </form>
</div>

<#+ string GetKeyName()
{
    return T4Helper.PropertyOperations.GetKeyLocalVariableName(EntityType);

} #>
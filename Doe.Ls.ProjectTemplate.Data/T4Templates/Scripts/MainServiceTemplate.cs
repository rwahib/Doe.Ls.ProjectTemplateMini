// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Doe.Ls.ProjectTemplate.Data.T4Templates.Scripts
{
    using Doe.Ls.EntityBase.Helper;
    using Doe.Ls.EntityBase.MVCExtensions;
    using System.Data.Entity.Core.Metadata.Edm;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class MainServiceTemplate : MVCTemplate.BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n");
            this.Write(" \r\n");
            this.Write("\r\n");
            
            #line 12 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
    
    var helper=new EdmMetadataHelper(EntityContext);

            
            #line default
            #line hidden
            this.Write(@"
/// <reference path=""_references.js"" />

define(['interactive', 'helper'], function (interactive, helper) {

    return {
        initialise: function(){
            interactive.initialise();
          
            var frmId = interactive.getFormId();
            var wrapperId = interactive.getWrapperId();

            if (!helper.hasValue(frmId)) {
                frmId = '';
            }

            if(!helper.hasValue(wrapperId)){
                wrapperId = '';
            }

");
            
            #line 35 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
    foreach(var entityType in helper.GetEntityList())
            
            #line default
            #line hidden
            
            #line 36 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
    { 
            
            #line default
            #line hidden
            
            #line 37 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
        if(entityType.Name.ToLower().Contains("sysdia"))continue; 
            
            #line default
            #line hidden
            this.Write("                if (wrapperId.indexOf(\'wrapper-");
            
            #line 38 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.CleanClassName(entityType.Name)));
            
            #line default
            #line hidden
            this.Write("\') > -1 || frmId.indexOf(\'form-");
            
            #line 38 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.GetLocalVariableName(entityType)));
            
            #line default
            #line hidden
            this.Write("\') > -1){\r\n                    require([\'");
            
            #line 39 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.GetLocalVariableName(entityType)));
            
            #line default
            #line hidden
            this.Write("Service\'], function(service){\r\n                        service.initialise();\r\n   " +
                    "                 });\r\n                }\r\n\r\n");
            
            #line 44 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"
    }
            
            #line default
            #line hidden
            this.Write("                \r\n\r\n            $(\'#loading-div\').hide();\r\n            $(\'#main-c" +
                    "ontainer\').show();\r\n            $(\'footer\').show();\r\n        }\r\n    }\r\n});");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\Scripts\MainServiceTemplate.tt"

private global::System.Data.Entity.DbContext _EntityContextField;

/// <summary>
/// Access the EntityContext parameter of the template.
/// </summary>
private global::System.Data.Entity.DbContext EntityContext
{
    get
    {
        return this._EntityContextField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool EntityContextValueAcquired = false;
if (this.Session.ContainsKey("EntityContext"))
{
    this._EntityContextField = ((global::System.Data.Entity.DbContext)(this.Session["EntityContext"]));
    EntityContextValueAcquired = true;
}
if ((EntityContextValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityContext");
    if ((data != null))
    {
        this._EntityContextField = ((global::System.Data.Entity.DbContext)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}

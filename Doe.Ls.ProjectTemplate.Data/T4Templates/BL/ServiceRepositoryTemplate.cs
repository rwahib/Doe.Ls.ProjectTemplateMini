// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Doe.Ls.ProjectTemplate.Data.T4Templates.BL
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Doe.Ls.EntityBase.Helper;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class ServiceRepositoryTemplate : MVCTemplate.BaseTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(" \r\n");
            this.Write("\r\n");
            this.Write("\r\n");
            
            #line 12 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
 T4Helper.SetAssemblyClassNameFormatFromContext(EntityContext); 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 14 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
    

var helper=new EdmMetadataHelper(EntityContext);    

            
            #line default
            #line hidden
            this.Write("using Doe.Ls.EntityBase.BLLBase;\r\nusing Doe.Ls.EntityBase.Logging;\r\nusing Doe.Ls." +
                    "EntityBase.RepositoryBase;\r\nusing Doe.Ls.EntityBase.SessionService;\r\nusing ");
            
            #line 22 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AppNamespace));
            
            #line default
            #line hidden
            this.Write(".Core.BL.DomainServices;\r\nusing ");
            
            #line 23 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AppNamespace));
            
            #line default
            #line hidden
            this.Write(".Core.BL.EntityRepositories;\r\nusing ");
            
            #line 24 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AppNamespace));
            
            #line default
            #line hidden
            this.Write(".Data;\r\n\r\n\r\nnamespace ");
            
            #line 27 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AppNamespace));
            
            #line default
            #line hidden
            this.Write(@".Core.BL 
{
    public partial class ServiceRepository 
    {
        private readonly IRepositoryFactory _repositoryFactory;

        public IRepositoryFactory RepositoryFactory 
        {
            get { return _repositoryFactory; }
        }

        public ServiceRepository(IRepositoryFactory factory) 
        {
            _repositoryFactory = factory;
        }

    
        #region Entity services

        public IUnitOfWork GetUnitOfWork(params ResolverOverride[] overrides)
        {
            return _repositoryFactory.GetService<IUnitOfWork>();
        }

");
            
            #line 51 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
      foreach(var entityType in helper.GetEntityList())
        { 
            if(entityType.Name.ToLower().Contains("sysdia"))continue; 
            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 55 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.CleanClassName(entityType.Name)));
            
            #line default
            #line hidden
            this.Write("Repository ");
            
            #line 55 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.CleanClassName(entityType.Name)));
            
            #line default
            #line hidden
            this.Write("Repository(params ResolverOverride[] overrides) \r\n        {\r\n            return _" +
                    "repositoryFactory.GetService<IRepository<");
            
            #line 57 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityType.Name));
            
            #line default
            #line hidden
            this.Write(">>(overrides) as ");
            
            #line 57 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(T4Helper.CleanClassName(entityType.Name)));
            
            #line default
            #line hidden
            this.Write("Repository;\r\n        }\r\n        \r\n");
            
            #line 60 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"
    }//foreach 
            
            #line default
            #line hidden
            this.Write("        #endregion\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Projects\Doe.Ls.ProjectTemplateMini\Doe.Ls.ProjectTemplate.Data\T4Templates\BL\ServiceRepositoryTemplate.tt"

private global::System.Data.Entity.Core.Metadata.Edm.EntityType _EntityTypeField;

/// <summary>
/// Access the EntityType parameter of the template.
/// </summary>
private global::System.Data.Entity.Core.Metadata.Edm.EntityType EntityType
{
    get
    {
        return this._EntityTypeField;
    }
}

private string _AppNamespaceField;

/// <summary>
/// Access the AppNamespace parameter of the template.
/// </summary>
private string AppNamespace
{
    get
    {
        return this._AppNamespaceField;
    }
}

private global::System.Data.Entity.DbContext _EntityContextField;

/// <summary>
/// Access the EntityContext parameter of the template.
/// </summary>
private global::System.Data.Entity.DbContext EntityContext
{
    get
    {
        return this._EntityContextField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public override void Initialize()
{
    base.Initialize();
    if ((this.Errors.HasErrors == false))
    {
bool EntityTypeValueAcquired = false;
if (this.Session.ContainsKey("EntityType"))
{
    this._EntityTypeField = ((global::System.Data.Entity.Core.Metadata.Edm.EntityType)(this.Session["EntityType"]));
    EntityTypeValueAcquired = true;
}
if ((EntityTypeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityType");
    if ((data != null))
    {
        this._EntityTypeField = ((global::System.Data.Entity.Core.Metadata.Edm.EntityType)(data));
    }
}
bool AppNamespaceValueAcquired = false;
if (this.Session.ContainsKey("AppNamespace"))
{
    this._AppNamespaceField = ((string)(this.Session["AppNamespace"]));
    AppNamespaceValueAcquired = true;
}
if ((AppNamespaceValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AppNamespace");
    if ((data != null))
    {
        this._AppNamespaceField = ((string)(data));
    }
}
bool EntityContextValueAcquired = false;
if (this.Session.ContainsKey("EntityContext"))
{
    this._EntityContextField = ((global::System.Data.Entity.DbContext)(this.Session["EntityContext"]));
    EntityContextValueAcquired = true;
}
if ((EntityContextValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityContext");
    if ((data != null))
    {
        this._EntityContextField = ((global::System.Data.Entity.DbContext)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
